<?xml version="1.0" encoding="UTF-8"?>
<node name="/org/opensuse/Agama/Software1">
  <node name="Product"/>
  <node name="Proposal"/>

  <interface name="org.opensuse.Agama.Software1">
    <!--
      List available patterns.
    -->
    <method name="ListPatterns">
      <!--
        Flag if all or filtered only patterns. Way how it is filtered
        is internal details and basically it can change anytime.
        Filtered patterns are the one to show users for selection.
        For validation if patterns are valid, unfiltered should be used.
      -->
      <arg name="Filtered" direction="in" type="b"/>
      <!--
        Result of search for patterns. It is Map with pattern id as key and those values
        1. category of pattern. Useful for grouping patterns if needed
        2. description of pattern
        3. path to icon on local system
        4. summary of pattern
        5. order value for sorting patterns
      -->
      <arg name="Result" direction="out" type="a{s(sssss)}"/>
    </method>
    <!--
      Adds pattern to explicitelly selected ones.
    -->
    <method name="AddPattern">
      <!--
        Identifier of pattern.
      -->
      <arg name="id" direction="in" type="s"/>
      <!--
        Returns false if pattern does not exist in current list of repositories.
        Otherwise it returns true.
      -->
      <arg name="result" direction="out" type="b"/>
    </method>
    <!--
      Removes pattern from explicit selection. It can still be installed as dependency.
    -->
    <method name="RemovePattern">
      <!--
        Identifier of pattern.
      -->
      <arg name="id" direction="in" type="s"/>
      <!--
        Returns false if pattern does not exist in current list of repositories.
        Otherwise it returns true including case when pattern was not previously selected.
      -->
      <arg name="result" direction="out" type="b"/>
    </method>
    <!--
      Sets explicitly selected patterns.
    -->
    <method name="SetUserPatterns">
      <!--
        List of pattern ids.
      -->
      <arg name="ids" direction="in" type="as"/>
      <!--
        Return list of non existing patterns.
        Operation was basically cancelled if result is not empty.
      -->
      <arg name="wrong" direction="out" type="as"/>
    </method>
    <method name="ProvisionsSelected">
      <arg name="Provisions" direction="in" type="as"/>
      <arg name="Result" direction="out" type="ab"/>
    </method>
    <method name="IsPackageInstalled">
      <arg name="Name" direction="in" type="s"/>
      <arg name="Result" direction="out" type="b"/>
    </method>
    <!--
      Whether a package is available for installation.
    -->
    <method name="IsPackageAvailable">
      <!--
        Name of the package.
      -->
      <arg name="name" direction="in" type="s"/>
      <arg name="result" direction="out" type="b"/>
    </method>
    <method name="UsedDiskSpace">
      <arg name="SpaceSize" direction="out" type="s"/>
    </method>
    <method name="Probe">
    </method>
    <method name="Propose">
    </method>
    <method name="Install">
    </method>
    <method name="Finish">
    </method>
    <property type="a{sy}" name="SelectedPatterns" access="read"/>
  </interface>
</node>
