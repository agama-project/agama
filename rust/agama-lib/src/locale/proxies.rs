//! # DBus interface proxy for: `org.opensuse.Agama1.Locale`
//!
//! This code was generated by `zbus-xmlgen` `3.1.1` from DBus introspection data.
//! Source: `Interface '/org/opensuse/Agama1/Locale' from service 'org.opensuse.Agama1'`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!
//! This DBus object implements
//! [standard DBus interfaces](https://dbus.freedesktop.org/doc/dbus-specification.html),
//! (`org.freedesktop.DBus.*`) for which the following zbus proxies can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! â€¦consequently `zbus-xmlgen` did not generate code for the above interfaces.

use zbus::dbus_proxy;

#[dbus_proxy(
    interface = "org.opensuse.Agama1.Locale",
    default_service = "org.opensuse.Agama1",
    default_path = "/org/opensuse/Agama1/Locale"
)]
trait Locale {
    /// Commit method
    fn commit(&self) -> zbus::Result<()>;

    /// LabelsForLocales method
    // NOTE: zbus-xmlgen failed to identify the type, so it was written by manually. Beware when
    // updating this file.
    fn labels_for_locales(&self) -> zbus::Result<Vec<((String, String), (String, String))>>;

    /// ListTimezones method
    fn list_timezones(&self, locale: &str) -> zbus::Result<Vec<(String, String)>>;

    /// ListUILocales method
    #[dbus_proxy(name = "ListUILocales")]
    fn list_uilocales(&self) -> zbus::Result<Vec<String>>;

    /// ListVConsoleKeyboards method
    #[dbus_proxy(name = "ListVConsoleKeyboards")]
    fn list_vconsole_keyboards(&self) -> zbus::Result<Vec<String>>;

    /// Locales property
    #[dbus_proxy(property)]
    fn locales(&self) -> zbus::Result<Vec<String>>;
    fn set_locales(&self, value: &[&str]) -> zbus::Result<()>;

    /// SupportedLocales property
    #[dbus_proxy(property)]
    fn supported_locales(&self) -> zbus::Result<Vec<String>>;
    fn set_supported_locales(&self, value: &[&str]) -> zbus::Result<()>;

    /// Timezone property
    #[dbus_proxy(property)]
    fn timezone(&self) -> zbus::Result<String>;
    fn set_timezone(&self, value: &str) -> zbus::Result<()>;

    /// UILocale property
    #[dbus_proxy(property, name = "UILocale")]
    fn uilocale(&self) -> zbus::Result<String>;
    #[dbus_proxy(property, name = "UILocale")]
    fn set_uilocale(&self, value: &str) -> zbus::Result<()>;

    /// VConsoleKeyboard property
    #[dbus_proxy(property, name = "VConsoleKeyboard")]
    fn vconsole_keyboard(&self) -> zbus::Result<String>;
    fn set_vconsole_keyboard(&self, value: &str) -> zbus::Result<()>;
}
